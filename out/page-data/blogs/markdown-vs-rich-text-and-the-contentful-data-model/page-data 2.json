{"componentChunkName":"component---src-templates-blog-post-js","path":"/blogs/markdown-vs-rich-text-and-the-contentful-data-model","result":{"data":{"contentfulBlogs":{"id":"82409c36-b940-521e-9582-3de3f34e8451","title":"Markdown vs Rich Text & the Contentful Data Model","slug":"markdown-vs-rich-text-and-the-contentful-data-model","featureImage":{"gatsbyImageData":{"images":{"sources":[{"srcSet":"https://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=480&h=270&q=50&fm=webp 480w,\nhttps://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=960&h=540&q=50&fm=webp 960w,\nhttps://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=1920&h=1080&q=50&fm=webp 1920w","sizes":"(min-width: 1920px) 1920px, 100vw","type":"image/webp"}],"fallback":{"src":"https://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=1920&h=1080&q=50&fm=png","srcSet":"https://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=480&h=270&q=50&fm=png 480w,\nhttps://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=960&h=540&q=50&fm=png 960w,\nhttps://images.ctfassets.net/o4gibwve10tr/1XtfQVfe5wce0cgQsjybAN/f3dc8b141f311d38d7b0c88c758eab85/Markdown_vs_Rich_Text.png?w=1920&h=1080&q=50&fm=png 1920w","sizes":"(min-width: 1920px) 1920px, 100vw"}},"layout":"constrained","backgroundColor":"#e8e8e8","width":1920,"height":1080}},"description":{"childMarkdownRemark":{"html":"<h1>TL;DR:</h1>\n<h2>... Use Markdown</h2>\n<hr>\n<p>When I first started building this website, I spent some time reasearching the best tools to make the site.</p>\n<p>I decided on:</p>\n<ul>\n<li>GatsbyJS as a React Framework to build the site</li>\n<li>Contentful as a \"Headless\" CMS</li>\n</ul>\n<p>Gatsby takes the content from Contenftul, builds the website, and creates \"flat\" html webpages. In this build process, you need to decide to use Markdown or Rich Text in the CMS. I saw a few things online, but it seemed like there were options for both.</p>\n<h3><strong>Reasons to use Rich Text:</strong></h3>\n<p>If you have a team of content creators or editors, Rich text is nice because what you see is what you get (WYSIWYG).</p>\n<h3><strong>Reasons not to use Rich Text:</strong></h3>\n<p>Handling images, iframes, YouTube videos, tweets, code blocks, and other types of embedded content can be difficult -- not impossible, but still more work than markdown. Basically, you need to add a custom renderer for each type of content.</p>\n<h3><strong>Here is an example for rendering an image in Rich Text:</strong></h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">workPost</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>contentfulWorks<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">renderNode</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token string-property property\">\"embedded-asset-block\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">const</span> alt <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">[</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">]</span>\n              <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>fields<span class=\"token punctuation\">.</span>file<span class=\"token punctuation\">[</span><span class=\"token string\">'en-US'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>url\n              <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>img alt<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>alt<span class=\"token punctuation\">}</span> src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>I started building out a way to render an iframe and had a feeling that there must be a better way to do this. I did some more research and found the gatsby plugin <a href=\"https://github.com/MichaelDeBoey/gatsby-remark-embedder\">embedded-remark-embedder</a>, added it to my <code class=\"language-text\">gatsby-config.js</code> file by adding the code below, and off I went.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">          <span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">gatsby-remark-embedder</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n              <span class=\"token literal-property property\">customTransformers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token comment\">// Your custom transformers</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">services</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token comment\">// The service-specific options by the name of the service</span>\n              <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2><strong>Reasons to use Markdown</strong></h2>\n<ul>\n<li>it's straightforward to learn</li>\n<li>it's easy to render embedded content. Just insert it into the markdown field and you're usually good to go.</li>\n<li>you can write HTML in the content and it will be passed along</li>\n</ul>\n<h2><strong>Reasons not to use Markdown</strong></h2>\n<ul>\n<li>it looks \"weird\" - not WYSIWYG</li>\n<li>editing a large table can get out of control quickly</li>\n</ul>\n<p>Overall, markdown has been an easier experience even if it looks weird while editing the content.</p>\n<h1><strong>Okay, but what about Contentful?</strong></h1>\n<p>So after coming up to speed with Contentful, I learned about the \"Content Model\". Basically, this is like a database schema with each column datatype defined.</p>\n<h3><strong>Here's what it looks like:</strong></h3>\n<p><img src=\"//images.ctfassets.net/o4gibwve10tr/4VY3TsN0hJZsa6FymReGfR/f3e33ca45d4cd63ac2e97d3d86e05a40/Screen_Shot_2020-08-13_at_7.36.08_PM.png\" alt=\"Contentful Data Model\"></p>\n<h3><strong>Title:</strong></h3>\n<p>This is just a title. Short text has a limit to the number of characters.</p>\n<h3><strong>Slug:</strong></h3>\n<p>Short text is the data type. A slug is basically a primary key and a unique identifier for that piece of content. It is required as it will probably be part of the URL.</p>\n<h3><strong>Feature Image:</strong></h3>\n<p>This is a Media data type. Self explanatory</p>\n<h3><strong>Description:</strong></h3>\n<p>This is a long text field and you can specify to use it as Markdown field, a defined dropdown list, or radio buttons.</p>\n<p>On my bucket list page, I felt pretty clever using a radio button to set the green/red frame around each item (if I've accomplished it or not). This was used to create a true/false CSS Class using the following method:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"accomplished\"</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">.</span>allContentfulBucketList<span class=\"token punctuation\">.</span>edges<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>selectedItem<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>node<span class=\"token punctuation\">.</span>accomplished<span class=\"token punctuation\">}</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>"}},"createdAt":"2020-08-14T01:28:56.870Z"},"contentfulSiteInformation":{"siteUrl":"https://michaellunzer.com","twiteerHandle":"@michaellunzer"}},"pageContext":{"slug":"markdown-vs-rich-text-and-the-contentful-data-model"}},"staticQueryHashes":["1194089924","1242132861","1746898652","1794736483","425184262","603260039","868401008"]}